命令行工具的优势（自动化方便）

* vedio download
youtube-dl
yt-dlp

yt-dlp -f 'bv*[height=720]+ba' --merge-output-format mp4 "https://www.youtube.com/channel/UCgm4gSv_stJ0-GDUukXfR6A/videos" --ffmpeg-location "E:/youtube-dll/ffmpeg/bin" --proxy socks5://127.0.0.1:1081

--download-archive videos.txt -o '%(channel)s/%(title)s.%(ext)s'

ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac -strict experimental output.
 
[[https://www.bilibili.com/read/cv14499590/][yt-dlp新手使用教程]]
[[https://www.bilibili.com/read/cv15305749/][yt-dlp简易使用方法]]
[[https://www.zhihu.com/question/300182407][ffmpeg音视频合并]]

https://answerquest.github.io/youtube-all-vids-info.html
[[https://console.cloud.google.com/apis/credentials/wizard?api=youtube.googleapis.com&previousPage=%2Fapis%2Fapi%2Fyoutube.googleapis.com%2Fmetrics%3Fproject%3Dmystic-curve-225714&project=mystic-curve-225714][console cloud google]]
https://9xbuddy.xyz/en-1bb


* [[/home/root/shuai-files/Reference/TOOL-Emacs.org][Emacs]]

* ledger

* GTD

* Arbtt
git clone https://github.com/nomeata/arbtt
cabal install --installdir=bin --install-method=copy --overwrite-policy=always

haskell

ghc 
ghc --version
cabal

curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh

[[https://www.haskell.org/ghcup/install/][Getting started - GHCup]]
/Entered on/ [2022-10-31 一 18:40]
[[http://arbtt.nomeata.de/#install][arbtt: the automatic, rule-based time tracker]]
/Entered on/ [2022-10-31 一 19:58]
[[https://arbtt.nomeata.de/doc/users_guide/effective-use.html][Effective Use of Arbtt]]
/Entered on/ [2022-10-31 一 21:30]
[[g:/emacs-notes/Computer_science/Programming/Ref.org::arbtt document][arbtt document]]


* Anki

* Git指北
[[https://www.progit.cn][Git Pro]]
[[https://github.com/jasonim/github-guide][jasonim/github-guide: Github指南汇集了各类GitHub、Git学习资源]]
/Entered on/ [2022-04-04 一 10:57]
[[https://github.com/agis/git-style-guide][agis/git-style-guide: A Git Style Guide]]
/Entered on/ [2022-04-04 一 11:12]
[[https://github.com/git/git/blob/master/Documentation/CodingGuidelines][git/CodingGuidelines at master · git/git]]
/Entered on/ [2022-04-04 一 11:12]
[[https://levelup.gitconnected.com/use-git-like-a-senior-engineer-ef6d741c898e][Use Git like a senior engineer]]
/Entered on/ [2022-11-17 周四 18:01]


* Cmake


* Tmux
tmux是一个终端管理工具，了解如下概念：会话，窗口，窗格
.tmux.conf 默认放在 ~目录下面，更改配置如下：
[[http://louiszhai.github.io/2017/09/30/tmux/][Tmux使用手册 | louis blog]]
/Entered on/ [2022-04-04 一 11:10]


* GDB指南
[[www.gdbtutorial.com][gdbtutorial.com]]


* 清单
清单使用的难点在确定有哪些清单，以何种方式组织数据


* SQL  MySQL


* Docker


* GUN-Linux-Tools-Summary
** Linux philosophy
a tool is a simple program, usually designed for a specific purpose, it is sometimes referred to(at least throughout this document) as a command.

the tools philosophy was to have small programs to accomplish a particular task instead of trying to develop large monolithic programs to do a large number of tasks. to accomplish more complex tasks, tools would simply be connected together, using pipes.

all the core UNIX system tools were designed so that they could operate together. the original text-based editors use ASCII and you can use tools such as sed awk cat more tr xxx.which avoid writing a program that already been written by someone else。
** Shell Tips
alias: list all your current aliases
On any Mandriva GNU/Linux system the global aliases (for all users) are all in /etc/profile.d/alias.sh

set +x ls:make bash print out each command it is going to run before it runs it

"\" can be used before special characters, to stop bash from trying to expaned them

~ : an alias to a users home directory

echo

history n

short-key
CTRL_Y: paste the last thing you delete
CTRL_K: cut or delete what is currently in front of the cursor
CTRL_W: cut or delete the entire line that has being typed

** help
man info whatis apropos

** IO
File Streams: Standard output/input/error
>: send information somewhere
<: insert information from somewhere as if you typed it yourself
>>: append information to the end of file or creates one if the file dosen`t exist
<<: 
2>: redirects error output
|: send the input of another
tee: send output of a program to a file and to standard output
&>: redirect standard output and error output to a specific location

** file-system
cd ls pwd tree 
find / -name/-regex/-exec file
slocate  whereis  which

mkdir rm rmdir mv cp ln shared du file stat dd touch split 
mmv:mmv \*.JPG \#1.jpg     rename 

** Finding information about the system
time /proc dmesg"print your bootup message displayed by the kernel"
df who w users last lastlog whoami free uptime uname xargs

data calb fdisk


* 正则表达式
[[https://deerchao.cn/tutorials/regex/diffs.html][正则表达式引擎对比]]
[[https://www.regular-expressions.info/quickstart.html][Regular Expression]]
[[https://c.runoob.com/front-end/854/?adsd=1212][正则表达式在线测试]]
[[https://github.com/regexhq][RegexHQ]]
/Entered on/ [2022-04-04 一 11:11]
[[https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md][earn-regex/README-cn.md at master · ziishaned/learn-regex]]
/Entered on/ [2022-04-04 一 11:11]
[[https://regex101.com/][regex101: build, test, and debug regex]]
/Entered on/ [2022-11-14 周一 11:30]

** 元字符：
\b 单词的开头或者结尾
. 除了换行符以外的所有字符  + 匹配1次或更多次
“*” 匹配0次或更多次
^ 字符串开始   $ 字符串结束   ? 匹配0次或1次

匹配元字符本身，用 \
[] 划定范围  | 分支条件   反义：\S+
捕获：(exp) (?<name>exp) (?:exp)
零宽断言+负向零宽断言：(?=exp) (?<=exp) (?!exp)匹配后面不是exp的位置  (?<!exp)匹配前面不是exp的位置

注释：#
懒惰限定符: *? +? ?? {n,m}?  {n,}?

(?'group') (?'-group') (?(group)yes|no) (?!)



* Huggin+RSS
  

* Rime输入法
一、同步
先写同步，是因为这可能是更多人更感兴趣的部分，毕竟许多人的手机加电脑的数量大于一。
我的做法是先编辑installation.yaml文件如下：
installation_id: "Linux"
sync_dir: /media/sda5/Rimeuser/sync

 其中sync_dir这一行是手工加上去的，这里的两个值是我在当前机器（Linux）上的设置，读者应按实际情况写入自己的设置值。例如我在Windows上的设置如下：
installation_id: "Win"
sync_dir: D:\Rimeuser\sync

保存文件，单击Rime图标-部署。

然后，我只要在sync目录下放置不同的文件夹，里面分别放好来自不同机器的***.userdb.txt，单击Rime图标-同步，即可把我在别的设备上的输入记录或曰个人输入词库同步到本机上。

[[https://www.worldlink.com.cn/zh_tw/osdir/pyim.html#orgd5b4684][pyim]]
/Entered on/ [2021-11-17 三 00:44]

[[https://rime.im/][RIME | 中州韻輸入法引擎]]
/Entered on/ [2021-11-16 二 23:40]

[[https://www.cnblogs.com/keatonlao/p/12983158.html][Ubuntu 上安装使用 ibus-rime（超实用） - keatonlao - 博客园]]
/Entered on/ [2021-10-17 日 14:30]

[[https://github.com/rime/home/wiki/CustomizationGuide#%E5%9C%A8%E6%96%B9%E6%A1%88%E9%81%B8%E5%96%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%BA%94%E7%AD%86%E9%9B%99%E6%8B%BC][CustomizationGuide · rime/home Wiki · GitHub]]
/Entered on/ [2021-10-17 日 14:30]

[[https://www.bilibili.com/read/cv6952486][超强的输入法：rime的配置（linux) - 哔哩哔哩]]
/Entered on/ [2021-10-17 日 14:37]

[[https://github.com/rime/home/wiki/CustomizationGuide#%E9%87%8D%E6%96%B0%E4%BD%88%E7%BD%B2%E7%9A%84%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95][CustomizationGuide · rime/home Wiki · GitHub]]
/Entered on/ [2021-11-17 三 00:44]





* Trash
** Zotero
定位：pdf管理、rss订阅
** Tasker
[[https://github.com/guifelix/awesome-tasker][tasker tutorial]]tered on/ [2021-09-26 日 22:38]

组成：配置文件 人物 场景 


* 常用工具
图片压缩:
    sudo apt install jpegoptim||optipng

    jpegoptim --size=50% xxx.jpg
    optipng xxx.png

图片尺寸处理:
    sudo apt install imagemagick

    mogrify -resize 422x316 *.png
    mogrify -format jpg -resize 1024x768 *.jpg
    

* 录音
obs studio安装
面板定制
插件安装  (放弃)

Audacity:
找不到怎么录制windows内部的声音

moo0: 插上耳机就录制不了

电脑的声音是怎么发出来的：
右键-->打开音量混合器  麦克风 扬声器(系统声音(硬件相关) 程序声音)，他们硬件用同一个扬声器
就录扬声器发出的声音吧，最终选择Moo0，只录人声，效果一般；录制电脑所有声音，效果不错


* Log
  <2022-11-06 周日 17:22> 我想观察胡和班的交流模式，对照修改我的交流模式，录音是最基本需求，得打造相关的工具链
  录音是第一步，Obs Studio是第一个工具
